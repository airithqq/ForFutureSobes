<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ForFutureSobes.API</name>
    </assembly>
    <members>
        <member name="M:ForFutureSobes.Controllers.TasksController.GetAll">
            <summary>
            Get all existing tasks
            </summary>
        </member>
        <member name="M:ForFutureSobes.Controllers.TasksController.GetByTheme(System.String)">
            <summary>
            Get tasks by theme
            </summary>
        </member>
        <member name="M:ForFutureSobes.Controllers.TasksController.GetById(System.Int32)">
            <summary>
            Get task by id
            </summary>
        </member>
        <member name="M:ForFutureSobes.Controllers.TasksController.GetAllUncompleted">
            <summary>
            Get all uncompleted tasks by user
            </summary>
        </member>
        <member name="M:ForFutureSobes.Controllers.TasksController.GetByPriority(System.String)">
            <summary>
            Get task`s by priorities, available via the drop-down menu
            </summary>
        </member>
        <member name="M:ForFutureSobes.Controllers.TasksController.Create(System.String)">
            <summary>
            Create new task for existing theme
            </summary>
        </member>
        <member name="M:ForFutureSobes.Controllers.TasksController.Update(System.Int32,System.String)">
            <summary>
            Update existing task and theme
            </summary>
        </member>
        <member name="M:ForFutureSobes.Controllers.TasksController.Delete(System.String)">
            <summary>
            Delete all tasks that belong`s to current theme
            </summary>
        </member>
        <member name="M:ForFutureSobes.Controllers.GeminiApiController.Ask(System.String,System.Int32)">
            <summary>
            Ask Gemini about task that not completed 
            </summary>
        </member>
        <member name="M:ForFutureSobes.Controllers.ThemesController.GetAllThemes">
            <summary>
            Get all existing themes
            </summary>
        </member>
        <member name="M:ForFutureSobes.Controllers.ThemesController.GetById(System.Int32)">
            <summary>
            Get theme by id
            </summary>
        </member>
        <member name="M:ForFutureSobes.Controllers.ThemesController.CreateTheme(System.String)">
            <summary>
            Create new unique theme
            </summary>
        </member>
        <member name="M:ForFutureSobes.Controllers.ThemesController.DeleteAsync(System.String)">
            <summary>
            Delete theme
            </summary>
        </member>
    </members>
</doc>
